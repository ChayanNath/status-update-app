version: "3.8"

networks:
  app_network:
    driver: bridge

services:
  mongo_primary:
    container_name: mongo_primary
    image: mongo:latest
    ports:
      - "27017:27017"
    command: ["mongod", "--replSet", "rs0"]
    volumes:
      - mongo_primary:/data/db
    networks:
      - app_network

  mongo_secondary:
    container_name: mongo_secondary
    image: mongo:latest
    ports:
      - "27018:27017"
    command: ["mongod", "--replSet", "rs0"]
    volumes:
      - mongo_secondary:/data/db
    networks:
      - app_network

  mongo_arbiter:
    container_name: mongo_arbiter
    image: mongo:latest
    ports:
      - "27019:27017"
    command: ["mongod", "--replSet", "rs0"]
    volumes:
      - mongo_arbiter:/data/db
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - "5000:5000"
    environment:
      MONGO_URI: mongodb://mongo_primary:27017,mongo_secondary:27017/?replicaSet=rs0
      PORT: 5000
      SECRET_KEY: your_secret_key
      NODE_ENV: development
      CLIENT_ORIGIN: http://localhost:3000
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: password
    networks:
      - app_network
    depends_on:
      - mongo_primary
      - mongo_secondary
      - mongo_arbiter

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
    depends_on:
      - backend
    networks:
      - app_network

volumes:
  mongo_primary:
  mongo_secondary:
  mongo_arbiter:
